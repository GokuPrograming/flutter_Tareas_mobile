import 'package:flutter/material.dart';
import 'package:tareas_flutter/screens/starbucks/config/colors.dart';
import 'package:tareas_flutter/screens/starbucks/config/drink.dart';

class Drinkcard extends StatelessWidget {
  final Drink drink;
  final double pageOffset;

  final int index;
  const Drinkcard(this.pageOffset, this.index,
      {super.key, required this.drink});

  @override
  Widget build(BuildContext context) {
    final Size size = MediaQuery.of(context).size;
    double animate = 0;
    double animation;
    double cardWidth = size.width - 10;
    double cardHeight = size.height * .50;
    double count = 0;
    double page;
    for (page = pageOffset; page > 1;) {
      page--;
      count++;
    }
    animation = Curves.easeInOut.transform(page);
    animation = 100 * (count + animation);
    for (int i = 0; i < index; i++) {
      animate -= 100;
    }
    print(
      'es el pageOffset=$pageOffset, contador=$count,pagina=$page, index =$index',
    );
    return Container(
      alignment: Alignment.center,
      child: Stack(
        clipBehavior: Clip.none,
        children: [
          BuildTopText(drink: drink),
          buildBackgroundImage(cardWidth, cardHeight, size, drink: drink),
          buildAboveCard(cardWidth, cardHeight, drink: drink, size: size),
          buildCupImage(size: size, drink: drink),
          buildBlurImage(cardWidth, cardHeight, drink: drink, size: size),
          buildSmallImage(cardWidth, cardHeight, drink: drink, size: size),
          buildTopImage(cardWidth, cardHeight, drink: drink, size: size)
        ],
      ),
    );
  }
}

class buildTopImage extends StatelessWidget {
  const buildTopImage(
    this.cardWidth,
    // this.animate,
    this.cardHeight, {
    super.key,
    required this.drink,
    required this.size,
  });

  final double cardWidth;
  final double cardHeight;
  final Drink drink;
  final Size size;
  // final double animate;

  @override
  Widget build(BuildContext context) {
    return Positioned(
      left: cardHeight / 10,
      bottom: size.height * .20 + cardHeight,
      child: Image.asset(drink.imageTop.toString()),
    );
  }
}

class buildSmallImage extends StatelessWidget {
  final double cardWidth;
  final double cardHeight;
  final Drink drink;
  final Size size;

  const buildSmallImage(
    this.cardWidth,
    this.cardHeight, {
    super.key,
    required this.drink,
    required this.size,
  });

  @override
  Widget build(BuildContext context) {
    return Positioned(
        right: -10,
        top: size.height * .3,
        child: Image.asset(
          drink.imageSmall.toString(),
        ));
  }
}

class buildBlurImage extends StatelessWidget {
  final Drink drink;
  final Size size;
  final double cardHeight;
  final double cardWidth;
  const buildBlurImage(
    this.cardHeight,
    this.cardWidth, {
    super.key,
    required this.size,
    required this.drink,
  });

  @override
  Widget build(BuildContext context) {
    return Positioned(
      right: cardWidth / 2 - 60,
      bottom: size.height * .1,
      child: Image.asset(drink.imageBlur.toString()),
    );
  }
}

class buildCupImage extends StatelessWidget {
  final Drink drink;
  final Size size;

  const buildCupImage({
    super.key,
    required this.size,
    required this.drink,
  });

  @override
  Widget build(BuildContext context) {
    return Positioned(
        bottom: 100,
        right: -size.width * .2 / 2 + 65,
        child: Image.asset(
          drink.cupImage.toString(),
          height: size.height * .55 - 40,
        ));
  }
}

class buildAboveCard extends StatelessWidget {
  final double cardHeight;
  final double cardWidth;
  final Size size;
  final Drink drink;
  const buildAboveCard(this.cardWidth, this.cardHeight,
      {super.key, required this.drink, required this.size});

  @override
  Widget build(BuildContext context) {
    return Positioned(
      width: cardWidth,
      height: cardHeight,
      bottom: size.height * .25,
      child: Container(
        margin: EdgeInsets.symmetric(horizontal: 30),
        decoration: BoxDecoration(
          color: Colors.black.withOpacity(.5),
          borderRadius: BorderRadius.circular(25),
        ),
        padding: EdgeInsets.all(30),
        child: Column(
          children: [
            const Text(
              'frapuchino ',
              style: TextStyle(
                  fontSize: 35,
                  fontWeight: FontWeight.bold,
                  color: Color.fromARGB(197, 10, 8, 0)),
            ),
            const SizedBox(
              height: 10,
            ),
            Text(
              drink.descripcion.toString(),
              style: const TextStyle(
                  fontSize: 16,
                  fontWeight: FontWeight.normal,
                  color: Colors.white),
            ),
            Spacer(),
            Row(
              crossAxisAlignment: CrossAxisAlignment.end,
              children: [
                Image.asset(
                  drink.cupImage.toString(),
                  width: 20,
                ),
                SizedBox(
                  width: 5,
                ),
                Image.asset(
                  drink.cupImage.toString(),
                  width: 15,
                ),
                SizedBox(
                  width: 5,
                ),
                Image.asset(
                  drink.cupImage.toString(),
                  width: 10,
                ),
                SizedBox(
                  width: 5,
                )
              ],
            ),
            SizedBox(
              height: 15,
            ),
            Container(
              height: 40,
              decoration: BoxDecoration(
                  color: Colors.green[200],
                  borderRadius: BorderRadius.circular(20)),
              child: Center(
                child: Row(
                  crossAxisAlignment: CrossAxisAlignment.end,
                  children: [
                    SizedBox(
                      width: 20,
                    ),
                    Text(
                      '\$',
                      style: TextStyle(fontSize: 20, color: Colors.white),
                    ),
                    SizedBox(
                      width: 10,
                    ),
                    Text(
                      '4',
                      style: TextStyle(fontSize: 19, color: Colors.white),
                    ),
                    Text(
                      '70',
                      style: TextStyle(fontSize: 19, color: Colors.white),
                    ),
                  ],
                ),
              ),
            )
          ],
        ),
      ),
    );
  }
}

class buildBackgroundImage extends StatelessWidget {
  final Drink drink;
  final double cardHeight;
  final double cardWidth;
  final Size size;

  const buildBackgroundImage(this.cardWidth, this.cardHeight, this.size,
      {super.key, required this.drink});

  @override
  Widget build(BuildContext context) {
    return Positioned(
      width: cardWidth,
      height: cardHeight,
      bottom: size.height * .25,
      child: Container(
        margin: EdgeInsets.symmetric(horizontal: 30),
        child: ClipRRect(
          borderRadius: BorderRadius.circular(25),
          child: Image.asset(
            drink.backgroundImage.toString(),
            fit: BoxFit.cover,
          ),
        ),
      ),
    );
  }
}

class BuildTopText extends StatelessWidget {
  final Drink drink;
  const BuildTopText({super.key, required this.drink});

  @override
  Widget build(BuildContext context) {
    return Positioned(
      top: 20,
      left: 20,
      child: Row(
        children: [
          Text(
            drink.name.toString(),
            style: TextStyle(
                fontWeight: FontWeight.bold,
                fontSize: 50,
                color: drink.lightColor),
          ),
          Text(
            drink.conName.toString(),
            style: TextStyle(
                fontWeight: FontWeight.bold,
                fontSize: 50,
                color: drink.lightColor),
          ),
        ],
      ),
    );
  }
}
